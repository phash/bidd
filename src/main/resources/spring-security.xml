<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
                    http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
                    http://www.springframework.org/schema/security 
                    http://www.springframework.org/schema/security/spring-security-3.1.xsd
                    http://www.springframework.org/schema/tx
                    http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
				    http://www.springframework.org/schema/context
				    http://www.springframework.org/schema/context/spring-context-3.2.xsd">

	<http use-expressions="true" create-session="never" auto-config="true">
		<remember-me />
		<intercept-url pattern="/" access="permitAll" />
		<intercept-url pattern="/home" access="permitAll" />
		<intercept-url pattern="/login" access="permitAll" />
		<intercept-url pattern="/details/**" access="isAuthenticated()" />
		<intercept-url pattern="/register" access="!isAuthenticated()" />
		<intercept-url pattern="/**/*.png" access="permitAll" />
		<intercept-url pattern="/**/*.css" access="permitAll" />
		<intercept-url pattern="/secure/extreme/**" access="hasRole('supervisor')" />
		<intercept-url pattern="/secure/**" access="isAuthenticated()" />
		<intercept-url pattern="/**" access="denyAll" />
		<!-- the login page is a wicket page mounted in WicketApplication.init() -->
		<form-login login-page="/login" />
	</http>

	<authentication-manager alias="authenticationManager">
    <authentication-provider user-service-ref="userDetailsService">
      <password-encoder ref="bidsPasswordEncoder">
        <salt-source user-property="benutzername" />
      </password-encoder>
    </authentication-provider>
  </authentication-manager>
	
	<!-- <authentication-manager alias="authenticationManager">
		<authentication-provider>
			<user-service>
				<user name="rod" password="koala" authorities="supervisor, teller, user" />
				<user name="dianne" password="emu" authorities="teller, user" />
				<user name="scott" password="wombat" authorities="user" />
				<user name="peter" password="opal" authorities="user" />
			</user-service>
		</authentication-provider>
	</authentication-manager> -->

	<!-- This filter is responsible for storing the SecurityContextHolder between 
		requests. Also see SecureWebSession.authenticate(). -->
	<beans:bean id="securityContextPersistenceFilter"
		class="org.springframework.security.web.context.SecurityContextPersistenceFilter" />


	<beans:bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<beans:property name="dataSource" ref="bidDS" />
		<beans:property name="packagesToScan" value="de.mroedig.bidd.entities" />
		<beans:property name="hibernateProperties">
			<beans:props>
				<beans:prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQLDialect
				</beans:prop>
				<beans:prop key="hibernate.show_sql">true</beans:prop>
				<beans:prop key="hibernate.format_sql">true</beans:prop>
				<beans:prop key="hibernate.hbm2ddl.auto">update</beans:prop>
			</beans:props>
		</beans:property>
	</beans:bean>

	<beans:bean id="bidDS"
		class="org.springframework.jndi.JndiObjectFactoryBean">
		<beans:property name="jndiName" value="java:comp/env/jdbc/bidDS">
		</beans:property>
	</beans:bean>
	<beans:bean id="txManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<beans:property name="sessionFactory" ref="sessionFactory" />
	</beans:bean>
	<context:component-scan base-package="de.mroedig" />
	<context:annotation-config />
	<tx:annotation-driven transaction-manager="txManager" />
</beans:beans>   